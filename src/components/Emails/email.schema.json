{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "email",
  "description": "A Meme email",
  "type": "object",
  "properties": {
    "_id": {
      "description": "Email id (guid)",
      "type": "string"
    },
    "name": {
      "description": "Name",
      "type": "string",
      "minLength": 1
    },
    "description": {
      "description": "Description",
      "type": "string",
      "minLength": 1
    },
    "subject": {
      "description": "Subject",
      "type": "string",
      "minLength": 1
    },
    "htmlFields": {
      "description": "Additional Components for adding into a template",
      "type": "object",
      "minProperties": 1,
      "patternProperties": {
        "^Comment": {
          "anyOf": [{
            "type": "object",
            "properties": {
              "attrs": {
                "type": "object",
                "properties": {
                  "data-eme-type": {
                    "description": "Sets the type of HTML component",
                    "type": "string"
                  },
                  "data-eme-required": {
                    "description": "Sets if a HTML components content is required",
                    "type": "string",
                    "enum": ["true"]
                  },
                  "name": {
                    "description": "The name of a HTML component",
                    "type": "string"
                  }
                },
                "required": ["data-eme-type", "name", "data-eme-required"]
              },
              "index": {
                "type": "integer"
              },
              "htmlBody": {
                "description": "A Comment",
                "type": "string",
                "format": "htmlComment"
              }
            },
            "required": ["attrs", "index"]
          },
          {
            "type": "object",
            "properties": {
              "attrs": {
                "type": "object",
                  "properties": {
                    "data-eme-type": {
                      "description": "Sets the type of HTML component",
                      "type": "string"
                    },
                    "data-eme-required": {
                      "description": "Sets if a HTML components content is required",
                      "enum": ["false", null]
                    },
                    "name": {
                      "description": "The name of a HTML component",
                      "type": "string"
                    }
                  },
                "required": ["data-eme-type", "name"]
              },
              "index": {
                "type": "integer"
              },
              "htmlBody": {
                "description": "A Comment",
                "type": "string"
              }
            },
            "required": ["attrs", "index"]
          }]
        },

        "^Newsfeed": {
          "anyOf": [{
            "type": "object",
            "properties": {
              "attrs": {
                "type": "object",

                "properties": {
                  "data-eme-type": {
                    "description": "Sets the type of HTML component",
                    "type": "string"
                  },
                  "data-eme-required": {
                    "description": "Sets if a HTML components content is required",
                    "type": "string",
                    "enum": ["true"]
                  },
                  "name": {
                    "description": "The name of a HTML component",
                    "type": "string"
                  }
                },
                "required": ["data-eme-type", "name", "data-eme-required"]
              },
              "index": {
                "type": "integer"
              },
              "articles": {
                "description": "articles",
                "type": "array",
                "minItems": 1
              }
            },
            "required": ["attrs", "index", "articles"]
          },
          {
            "type": "object",
            "properties": {
              "attrs": {
                "type": "object",
                  "properties": {
                    "data-eme-type": {
                      "description": "Sets the type of HTML component",
                      "type": "string"
                    },
                    "data-eme-required": {
                      "description": "Sets if a HTML components content is required",
                      "enum": ["false", null]
                    },
                    "name": {
                      "description": "The name of a HTML component",
                      "type": "string"
                    }
                  },
                "required": ["data-eme-type", "name"]
              },
              "index": {
                "type": "integer"
              },
              "articles": {
                "description": "articles",
                "type": "array"
              }
            },
            "required": ["attrs", "index"]
          }]
        }
      }
    },
    "htmlBody": {
      "description": "HTML body",
      "type": "string",
      "minLength": 1
    },
    "campaign": {
      "description": "Campaign",
      "type": ["string", "null"]
    },
    "segmentId": {
      "description": "Segment Id",
      "type": "string",
      "minLength": 0
    },
    "plainBody": {
      "description": "Plain text body",
      "type": "string",
      "minLength": 1
    },
    "replyTo": {
      "description": "reply to email",
      "type": "string"
    },
    "from": {
      "description": "Name and Address used in `from` field",
      "type": "object",
      "properties": {
        "address": {
          "description": "Category (from domain)",
          "type": "string",
          "pattern": ".+@.+"
        },
        "name": {
          "description": "From friendly name",
          "type": "string"
        }
      },
      "required": ["address", "name"]
    },
    "autogeneratePlain": {
      "description": "Generate plain body from html",
      "type": "boolean"
    },
    "queries": {
      "description": "queries for enrichment",
      "title": "CAPI Searches",
      "properties": {
        "activated": {
          "type": "boolean"
        },
        "list": {
          "type": "array",
          "items": {
            "variableName": {
              "type": "string",
              "minLength": 2
            },
            "query": {
              "type": "string",
              "minLength": 3
            },
            "limit": {
              "type": "string",
              "minLength": 1
            }
          }
        }
      }
    }
  },
  "required": [
    "name",
    "subject",
    "htmlFields"
  ]
}
